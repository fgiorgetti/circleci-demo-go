version: 2.1 # use CircleCI 2.0
orbs:
    go: circleci/go@1.7.2
commands:
  podman-latest:
    description: "Install latest podman v4 or higher"
    steps:
      - run:
          name: install podman
          command: |
            sudo mkdir -p /etc/apt/keyrings
            curl -fsSL https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/unstable/xUbuntu_$(lsb_release -rs)/Release.key \
              | gpg --dearmor \
              | sudo tee /etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg > /dev/null
            echo \
              "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg]\
                https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/unstable/xUbuntu_$(lsb_release -rs)/ /" \
              | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:unstable.list > /dev/null
            sudo apt-get update -qq
            sudo apt-get -qq -y install podman
            podman version

            # Starting systemd user service
            systemctl --user start podman.socket
  verify-go:
    steps:
      - go/install:
          version: "1.19"
      - run:
          name: go version
          command: |
            go version
  go-junit:
    steps:
      - go/install:
          version: "1.19"
      - run:
          name: go junit reporter
          command: |
            go install github.com/jstemmer/go-junit-report@v1.0.0
  local-ips:
    steps:
      - run:
          name: "local ip addresses"
          command: |
            LOCAL_IP=$(ip addr show | grep inet\ | grep -vE 'lo$|docker' | awk '{print $2}' | awk -F '/' '{print $1}')
            echo "export LOCAL_IP=${LOCAL_IP}" >> ${BASH_ENV}
            [[ "${MY_ENV_VAR}" = "abcd" ]] && echo "Env var is correct" || echo "Invalid value"
  docker-registry:
    steps:
      - run:
          name: "create docker registry"
          command: |
            docker run --name registry -d -p 5000:5000 registry
  list-containers-job:
    steps:
      - run:
          name: "list docker containers"
          command: |
            set
            docker ps
            echo "Local IP = ${LOCAL_IP}"
  clone-skupper:
    steps:
      - run:
          name: "clone skupper repo"
          command: |
            git clone -b podman-cli-test-fix https://github.com/fgiorgetti/skupper
  generate-client:
    steps:
      - run:
          name: "generate skupper clients"
          command: |
            cd skupper && make generate-client build-cmd
  podman-system-tests:
    steps:
      - run:
          name: "run podman system tests"
          command: |
            cd skupper && go test -count=1 -v -tags=podman ./pkg/domain/podman/... -use-cluster
  podman-integ-tests:
    steps:
      - run:
          name: "run podman integration tests"
          command: |
            cd skupper && make build-cmd && sudo install skupper /usr/local/bin && go test -count=1 -v -tags=podman,integration ./test/integration/examples/custom/helloworld -run TestHelloWorldCLIOnPodman | tee test-podman.out
            cat test-podman.out | go-junit-report > test-podman.xml
      - store_test_results:
          path: skupper
  minikube-install:
    description: Installs the minikube executable onto the system.
    steps:
      - run:
          command: >-
            curl -Lo minikube
            https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 &&
            chmod +x minikube && sudo
            mv minikube /usr/local/bin/
          name: Install Minikube Executable

  minikube-start-medium:
    description: Starts the minikube service, with 2 CPU and 2 GiB
    steps:
      - run:
          command: >-
            minikube start --vm-driver=docker --cpus 2 --memory 2048
          name: Start Minikube Cluster
  minikube-start-load-balancer:
    description: Starts the minikube tunnel
    steps:
      - run:
          command: minikube tunnel
          name: Start Minikube Tunnel
          background: true
jobs: # basic units of work in a run
  skupper-podman-tests:
    description: "Run podman system tests for Skupper"
    executor: my-executor
    steps:
      - local-ips
      - docker-registry
      - list-containers-job
      - minikube-install
      - minikube-start-medium
      - minikube-start-load-balancer
      - podman-latest
      - verify-go
      - go-junit
      - clone-skupper
      - generate-client
      - name: Sleeping 3600 secs
        run: |
          sleep 3600
#      - podman-integ-tests
#      - podman-system-tests
  push-master-images:
    docker:
      - image: circleci/golang:1.19
    parallelism: 1
    steps:
      - run:
          name: Push master images
          command: |
            echo "CircleCI playground"
            ls -l 
            pwd
            echo "this must only be executed for master branch only"
  use-registry:
    description: "list docker containers"
    executor: my-executor
    steps:
      - attach_workspace:
          at: /tmp/
      - docker-registry
      - list-containers-job
      - run:
          command: |
            ls -ld /tmp/images
            ls -l /tmp/images
            cat /tmp/images/image.data
            
anchors:
  branch_filters: &run_for_master_branch
    filters:
      branches:
        ignore: /.*/
        only: /master/

executors:
  my-executor:
    machine:
      image: ubuntu-2204:2022.10.2
    resource_class: medium

workflows:
  version: 2.1
  build-workflow:
    jobs:
      - skupper-podman-tests:
          context: test-fernando
#      - use-registry:
#          requires:
#            - skupper-podman-tests
#      - push-master-images:
#          <<: *run_for_master_branch
#          requires:
#            - verify-go
